#-----------------------------------------------------------------------------
# Profile for PlayStation 3.
# DO NOT MODIFY THIS (OR AT YOUR OWN RISK)
#
# This configuration profile serves two purposes:
#
#   - Allow UMS to recognize a specific connecting renderer
#   - Define the possibilities of that renderer
#

#-----------------------------------------------------------------------------
# RENDERER INFORMATION
#

# RendererName: Determines the name that is displayed in the UMS user
# interface when this renderer connects.
RendererName = PlayStation 3

# RendererIcon: Determines the icon that is displayed in the UMS user
# interface when this renderer connects. By default, these icons are
# bundled with UMS in ums.jar, but they can easily be customised:
# http://www.ps3mediaserver.org/forum/viewtopic.php?f=6&t=3507&p=49536#p49536
RendererIcon = ps3.png

#-----------------------------------------------------------------------------
# RENDERER RECOGNITION
#
# When a renderer connects, it sends a "User-Agent" header. UMS tries to
# match that header with all configuration profiles. If none of the profiles
# match, the message "Unknown User-Agent:" will be displayed in the logs and
# UMS will switch to a default profile.
#
# Because matching involves all renderer configuration profiles, it is
# important to match as long a string as possible. This increases the chances
# that a match is unique. Version numbers are best avoided.
#
# To learn the exact headers of any renderer, set the logging level in
# "logback.xml" to "TRACE" and look for messages like "Received on socket:".
#
# ============================================================================
# PlayStation 3 uses the following strings:
#
# User-Agent: PLAYSTATION 3
# ---
# User-Agent: UPnP/1.0
# X-AV-Client-Info: av=5.0; cn="Sony Computer Entertainment Inc."; mn="PLAYSTATION 3"; mv="1.0";
# ---
# User-Agent: UPnP/1.0 DLNADOC/1.50
# X-AV-Client-Info: av=5.0; cn="Sony Computer Entertainment Inc."; mn="PLAYSTATION 3"; mv="1.0";
# ============================================================================
#

# UserAgentSearch: Optional regular expression to detect a connected renderer.
# The expression is case insensitive. When the expression is empty User-Agent
# headers are not used, this is the default. Note that one renderer can use
# several different User-Agent headers.
#
# Note that UMS will attempt to match UserAgentSearch to the header block
# as a whole, so if the same identifier sometimes appears in other headers
# UserAgentSearch will return a positive match in those cases as well. For
# example the PS3 uses the phrase 'PLAYSTATION 3' sometimes in User-Agent
# and sometimes in X-AV-Client-Info (or both) and just defining
# 'UserAgentSearch=PLAYSTATION 3' will cover all these cases.
#
# Examples:
#
# UserAgentSearch = Platinum/.*DLNADOC/|yxplayer2|MPlayer |NSPlayer/
# UserAgentSearch = Windows-Media-Player-DMS|Microsoft-Windows
#
# Ignoring the "UPnP/1.0" and "UPnP/1.0 DLNADOC/1.50" headers since they are
# too general, plus they can be detected from the additional header.
UserAgentSearch = PLAYSTATION 3

# UserAgentAdditionalHeader: Optional additional HTTP header for better
# detection. When defined, UMS also considers this header when trying to find
# a match.
#
# Note that UMS will combine UserAgentSearch and UserAgentAdditionalHeaderSearch
# into a single expression before attempting to match it to the header block
# as a whole, so this setting should only be defined if the additional header
# is always present and required for making a unique match, i.e. only when the
# UserAgentSearch setting is omitted or insufficient by itself.
UserAgentAdditionalHeader =

# UserAgentAdditionalHeaderSearch: Regular expression to search for in the
# additional HTTP header.
UserAgentAdditionalHeaderSearch =

SeekByTime = exclusive
CreateDLNATreeFaster = true

# DefaultVBVBufSize: Whether or not to use the default DVD buffer size. Setting
# this to "false" means a greater bitrate and faster encoding, but it can
# generate incompatible videos dependent on the renderer.
# Default: false
DefaultVBVBufSize = false

# MuxH264ToMpegTS: Whether the media renderer supports H.264 in a MPEG-TS file.
# Ignored if "MediaInfo" is set to true or on OS X 10.4.
# Default: true (conditions above)
MuxH264ToMpegTS = true

# MuxDTSToMpeg: Whether the media renderer supports DTS in an MPEG file. Ignored
# if MediaInfo = true.
# Default: false (condition above)
MuxDTSToMpeg = false

# WrapDTSIntoPCM: Set to "true" if the media renderer supports DTS wrapped
# into LPCM in a MPEG file.
# Default: true
WrapDTSIntoPCM = true

# WrapEncodedAudioIntoPCM: Set to "true" if the media renderer supports AC-3/DTS
# wrapped into LPCM in a MPEG file. It must be also enabled in GUI and overrides
# WrapDTSIntoPCM option if set to true.
# Default: false 
WrapEncodedAudioIntoPCM = true

# MuxLPCMToMpeg: Whether the media renderer supports LPCM in an MPEG file.
# Ignored if MediaInfo = true.
# Default: true
MuxLPCMToMpeg = true

# MaxVideoBitrateMbps: The maximum bitrate supported by the media renderer.
# Setting to "0" means unlimited.
# If the CPU is not very fast, it may be better to avoid using bandwidth limit
# and instead lower the bitrate by defining "CustomMencoderQualitySettings"
# and/or "CustomFFmpegOptions" since they can be less CPU-intensive.
# Default: 0
MaxVideoBitrateMbps = 0

# MaxVideoWidth and MaxVideoHeight: Maximum width and height supported by the
# media renderer.
# Setting to "0" means unlimited.
# Both must be 0, or both must be higher than 0.
# Defaults: 0
MaxVideoWidth = 1920
MaxVideoHeight = 1080

# H264Level41Limited: Set to "true" if the media renderer supports only H.264
# L4.1 at most.
# Default: false
H264Level41Limited = true

# TranscodeAudioTo441kHz: Set to "true" if music files need to be resampled at
# 44.1kHz.
# Default: false
TranscodeAudioTo441kHz = false

# TranscodeFastStart: Set to "true" if the renderer has a short timeout delay
# and needs to receive transcoded video with minimal delay. If set to "false",
# UMS will take some time to buffer some of the transcoded video.
# Default: false
TranscodeFastStart = true

# TranscodedVideoFileSize: The amount of transcoded data is unknown at the
# time of transcoding. Still, some renderers expect a size for the video file
# to be returned. Possible values are:
#            0: No size is sent to the renderer (default value)
# 100000000000: Fake size of 100 GB is sent to the renderer.
#           -1: Specific value that works perfect for the PS3. It is against
#               the DLNA spec though.
TranscodedVideoFileSize = -1

# TranscodedVideoAudioSampleRate: The audio sample rate to use in transcoded
# video
# Default: 48000
TranscodedVideoAudioSampleRate = 48000

# MimeTypesChanges: A list of mimetype transformations, separated by |.
# Example: MimeTypesChanges = old/mime1=new/mime1|old/mime2=new/mime2
# Default: ""
MimeTypesChanges = video/avi=video/x-divx

# TranscodeExtensions: Comma-separated list of file extensions that are forced
# to be transcoded and never streamed. Best left empty if MediaInfo = true,
# and define "Supported" formats instead.
# Default: ""
TranscodeExtensions =

# StreamExtensions: Comma-separated list of file extensions that are forced
# to be streamed and never transcoded. Best left empty if MediaInfo = true,
# and define "Supported" formats instead.
# Default: ""
StreamExtensions =

# ForceJPGThumbnails: Some renderers (e.g. Sony Bravia TVs and Blu-ray Disc
# players) require thumbnails to be represented as JPEGs (JPEG_TN) in the
# DLNA directory XML. Set this to true to force UMS to fake this representation.
# Notse: this has no effect on real thumbnail file formats or content-type
# headers, and will only return true if MediaInfo = true
# Default: false
ForceJPGThumbnails = false

# ThumbnailAsResource: Set to true if the renderer requires the use of the
# "res" element instead of the "albumArtURI" element for thumbnails in DLNA
# reponses. E.g. Samsung 2012 models do not recognize the "albumArtURI"
# element.
# Default: false, i.e. use "albumArtURI"
ThumbnailAsResource = false

# ChunkedTransfer: Some renderers are particular about the "Content-Length"
# headers in requests (e.g. Sony Blu-ray Disc players). By default, UMS will
# send a "Content-Length" that refers to the total media size, even if the exact
# length is unknown. Set this option to true to omit sending a length when it is
# unknown.
# Default: false
ChunkedTransfer = false

# CustomFFmpegOptions: Overrides the FFmpeg custom options in UMS for
# this renderer. Default is empty, which means the UMS settings will be used.
# All setting for output formats, codecs, bitrate e.g. can be used except video,
# audio and subs mapping (-map).
# Do not use it to override the FFmpeg video filter setting. Use
# OverrideVideoFilter instead.
# Default: ""
CustomFFmpegOptions =

# OverrideFFmpegVideoFilter: Overrides the scale and pad part of FFmpeg 
# VideoFilter options in UMS for this renderer. It leave all internal
# VideoFilter setting for subtitles untouched. Do not use -vf in this option and
# add only VideoFilter parameters (filters) separated by commas. Commas inside
# the filters are taken as a break so they must have an prefix.
# Example: OverrideFFmpegVideoFilter = pad=max(iw\\,ih*16/9)
# Default: ""
OverrideFFmpegVideoFilter =

# CustomMencoderQualitySettings: Overrides the MEncoder transcoding quality
# settings in UMS for this renderer.
# Default: ""
CustomMencoderQualitySettings =

# CustomMencoderOptions: Overrides the MEncoder custom options in UMS for
# this renderer.
# Many values will work, but particularly safe ones are:
# channels, lavcopts vcodec, lavcopts acodec, lavcopts abitrate
# Default: ""
CustomMencoderOptions =

# DisableMencoderNoskip: Prevents -noskip from being used by MEncoderVideo.
# Default: false
DisableMencoderNoskip =

# SubtitleHttpHeader: Some devices recognize a custom HTTP header for
# retrieving the contents of a subtitles file. Set this option to the name of
# that custom header and UMS will send the URL for the subtitles file in that
# header (e.g. Samsung devices recognize the "CaptionInfo.sec" header).
# Default: "", i.e. UMS will not send such header information.
SubtitleHttpHeader =

# KeepAspectRatio: This option adds black borders to the video to prevent the
# renderer from displaying an incorrect aspect ratio.
# If some videos on your renderer looked either stretched or squashed, enabling
# this setting may fix that.
# Default: false
KeepAspectRatio =

# RescaleByRenderer: Works only for FFmpeg. Normally the renderer is rescaling
# the video. 
# If set this option to false the UMS will do that.
# It can make better video quality but the CPU and bandwidth are more utilised
# and can produce jerking video on Wi-Fi.
# To use it, MaxVideoWidth and MaxVideoHeight must be set.
# Default: true
RescaleByRenderer =

# LimitFolders: Whether the renderer has a maximum folder limit
# Default: true
LimitFolders =

#-----------------------------------------------------------------------------
# Other useful hidden params and their default values if not defined:
#

# Display audio tag in TRANSCODE folder if defined in container (useful to find
# out correct audio track like commentary etc.)
# Default: true
ShowAudioMetadata = true

# Display subtitle tag in TRANSCODE folder if defined in container (showing
# subtitles info like forced, full, documentary etc.)
# Default: true
ShowSubMetadata = true

# Some renderers can't show length of DVD titles so it will add it directly to
# title name to be shown
# Default: false
ShowDVDTitleDuration = false

# Specified extension will be added to every file shared by UMS
# Default: ""
UseSameExtension =

# Change DLNA PN arguments, separated by |.
# Example: OldDlnaPn=NewDlnaPn|OldDlnaPn2=NewDlnaPn2
# Default: ""
DLNAProfileChanges =

# PN is defined for every file sent to the renderer via DLNAOrgPN value. If
# this value is wrong, the renderer may refuse listing or playing this file.
# When it is set to false, no DLNAOrgPN is sent to renderer, which can help
# with troubleshooting.
# The PN is a description of the file, e.g. AVC_TS_HD_60_AC3_ISO
# Most renderers require this to be true.
# Default: true
DLNAOrgPN = true

# Undocumented.
# Default: false
MediaParserV2_ThumbnailGeneration = false

# Wrap and/or truncate long labels. Sony Blu-ray Disc (and possibly other)
# renderers truncate long labels by default, but will process newline characters
# normally if the label contains them.
#
# These (optional) integer parameters control label layout:
#    width       - max number of chars per line (0=text wrap off)
#    height      - max number of lines per xmb item (0=no limit)
#    indent      - number of "hanging indent" whitespace chars to use
#                  (to avoid being overwritten by format icons)
#    whitespace  - decimal ascii # of the whitespace char to use (9=tab 32=space
#                  etc)
#    dots        - number of dots... to add at the end of truncated labels
#
# Example: TextWrap = width:0 indent:0 height:0 whitespace:9 dots:0
# Default: ""
TextWrap =

# Whether to send the last modified date metadata for files and folders, which
# can take up screen space on some renderers.
# Default: true
SendDateMetadata = true

# The loading priority of this renderer. This should be set to 1 (or greater)
# if this renderer config is a more specific version of one we already have.
# For example, we have a Panasonic TVs config that is used for all
# Panasonic TVs, except the ones we have specific configs for, so the
# specific ones have a greater priority to ensure they are used when
# applicable instead of the less-specific renderer config.
# Default: 0
LoadingPriority =

#-----------------------------------------------------------------------------
# IMAGES
#

# AutoExifRotate: Many cameras store information in the image file about the
# orientation of the camera while the picture was taken, allowing viewers to
# know which way was up. Set this option to "true" to allow UMS to rotate JPEG
# files based on EXIF information contained in the file, and relieve the
# renderer of that task.
# Default: false
AutoExifRotate = true

MediaInfo = true

# Our PS3-specific notes:
# DTS is not supported.
# H.264 within AVI containers is not supported, nor is GMC or QPEL.
# WMV is supported, but not with 5.1 audio.
# Apple Lossless Audio Codec (ALAC) is not supported.

# Supported video formats:
Supported = f:mpegps     v:mpeg1|mpeg2|mp4|h264   a:ac3|lpcm           m:video/mpeg
Supported = f:mpegts     v:mpeg1|mpeg2|mp4|h264   a:ac3|lpcm|mpa       m:video/mpeg
Supported = f:avi|divx   v:mp4|divx|mjpeg         a:mp3|lpcm|mpa|ac3   m:video/x-divx     gmc:0
Supported = f:mp4        v:mp4|h264               a:ac3                m:video/mp4
Supported = f:mp4        v:mp4|h264               a:aac                m:video/mp4                n:2
Supported = f:wmv        v:wmv|vc1                a:wma                m:video/x-ms-wmv           n:2

# Supported audio formats:
Supported = f:wav     a:dts          n:6   s:48000   m:audio/wav
Supported = f:wav     a:lpcm         n:6   s:48000   m:audio/l16
Supported = f:wav                    n:2   s:48000   m:audio/wav
Supported = f:mp3                    n:2             m:audio/mpeg
Supported = f:aac     a:(?!alac).+   n:2             m:audio/x-m4a
Supported = f:wma                    n:2             m:audio/x-ms-wma
Supported = f:atrac                  n:2             m:audio/x-oma
Supported = f:lpcm    a:lpcm         n:6   s:48000   m:audio/l16

# Supported image formats:
Supported = f:jpg    m:image/jpeg
Supported = f:png    m:image/png
Supported = f:gif    m:image/gif
Supported = f:tiff   m:image/tiff

# SupportedExternalSubtitlesFormats: Comma-separated list of text-based subtitle formats of external subtitles
# supported by the renderer for streaming together with streaming (not transcoded) video.
#
#	Supported formats:			File extension:
#		SUBRIP						.srt
#		ASS							.ass or.ssa
#		TEXT						.txt
#		MICRODVD					.sub
#		WEBTT						.wtt
#		SAMI						.smi	
#
# Example: SupportedExternalSubtitlesFormats = SUBRIP,ASS,MICRODVD
# Default: ""
SupportedExternalSubtitlesFormats =

# UseClosedCaption: Some renderers use the "sec:CaptionInfoEx" parameter to
# stream external subtitles.
# Supported subtitles are defined in SupportedSubtitlesFormat.
# Default: false
UseClosedCaption = false

# SupportedInternalSubtitlesFormats:  Comma-separated list of embedded subtitle formats
# supported by the renderer.
#
#	Supported formats: SUBRIP, ASS, TEXT, MICRODVD,	WEBTT, SAMI, VOBSUB, BMP, DIVX, PGS, USF, TX3G
	
#
# Example: SupportedInternalSubtitlesFormats = SUBRIP,ASS,PSG,DIVX
# Default: ""
SupportedInternalSubtitlesFormats =
